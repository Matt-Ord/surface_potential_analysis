[tool.poetry]
name = "surface_potential_analysis"
version = "0.0.1"
description = ""
authors = ["Matthew Ord <mo433@cam.ac.uk>"]
readme = "README.md"
packages = [{ include = "surface_potential_analysis" }]

[tool.poetry.scripts]
main = '_main.main:main'

[tool.poetry.dependencies]
python = ">=3.13,<3.14"
numpy = "^2.0.0"
matplotlib = "^3.8.2"
scipy = "^1.11.0"
qutip = "^5.0.0"
sse_solver_py = { path = "lib/sse_solver/sse_solver_py" }
slate = { path = "lib/slate", develop = true }
hamiltonian_generator = { path = "lib/hamiltonian_generator" }

[tool.poetry.group.dev.dependencies]
ruff = "*"

[tool.ruff]
unsafe-fixes = true

[tool.ruff.lint]
select = ["ALL"]
preview = true
ignore = [
    "COM812",
    "E501",
    "ANN101",
    "S101",
    "PT009",
    "D100",
    "D105",
    "CPY001",
    "TD003",
    "TD002",
]
exclude = ["typings/**/*", "lib/**/*"]


[tool.ruff.lint.extend-per-file-ignores]
"tests/**/*" = ["PLR6301", "PLC2701", "PLR0914", "D101", "D102", "D103", "D104"]

[tool.ruff.lint.pylint]
allow-dunder-method-names = [
    "__as_fundamental__",
    "__from_fundamental__",
    "__into_fundamental__",
    "__as_transformed__",
    "__into_transformed__",
    "__from_transformed__",
    "__convert_vector_into__",
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.isort]
required-imports = ["from __future__ import annotations"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
